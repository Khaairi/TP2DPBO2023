/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package film;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author MoKha
 */
public class addFilm extends javax.swing.JFrame {

    private dbConnection db;
    private Main film;
    private Boolean isUpdate = false;
    private int selectedID;
    private File fileImage;
    private String filePath;
    private String fileName;

    /**
     * Creates new form addFilm
     */
    public addFilm(Main film) {
        initComponents();
        db = new dbConnection();
        tampilCombo();
        cbDirector.setSelectedItem(null);
        this.film = film;
    }
    
    public addFilm(Main film, int id, String image, String title, String year, String director, String revenue)
    {
        initComponents();
        db = new dbConnection();
        tampilCombo();
        this.film = film;
        this.selectedID = id;
        this.isUpdate = true;
        this.fileName = image;
        btnAdd.setText("Update");
        txTitle.setText(title);
        txYear.setText(year);
        cbDirector.setSelectedItem(director);
        txRevenue.setText(revenue);
        txPath.setText(image);
        txUbah.setText("UBAH DATA FILM");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txYear = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cbDirector = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txRevenue = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        txUbah = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txTitle = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnBrowse = new javax.swing.JButton();
        txPath = new javax.swing.JTextField();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Director");

        cbDirector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDirectorActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Pendapatan");

        btnAdd.setBackground(new java.awt.Color(51, 255, 51));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        txUbah.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txUbah.setText("TAMBAH DATA FILM");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Judul");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Tahun Rilis");

        btnBrowse.setText("Browse");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBrowse)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(txUbah)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(btnCancel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnAdd))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5))
                            .addGap(27, 27, 27)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txYear, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                .addComponent(txTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                .addComponent(cbDirector, 0, 151, Short.MAX_VALUE)
                                .addComponent(txRevenue, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                .addComponent(txPath)))))
                .addGap(49, 49, 49))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(txUbah)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbDirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txRevenue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBrowse)
                    .addComponent(txPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnCancel))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void tampilCombo()
    {
        String sql = "SELECT * FROM director";
        java.sql.ResultSet res = db.selectQuery(sql);
        try {
            while(res.next())
            {
                cbDirector.addItem(res.getString("name"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void insertData() throws IOException
    {
        String title = txTitle.getText();
        String year = txYear.getText();
        int idDirector = 0;
        String revenue = txRevenue.getText();
        String director = cbDirector.getSelectedItem().toString();
        String sql = "SELECT * FROM director WHERE name = '"+director+"'";
        java.sql.ResultSet res = db.selectQuery(sql);
        try {
            if(res.next())
            {
                idDirector = res.getInt("id");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        uploadImage(this.fileName);
        String sql2 = "INSERT INTO film VALUES (NULL, '"+fileName+"', '"+title+"', '"+year+"', '"+idDirector+"', '"+revenue+"')";
        db.updateQuery(sql2);
        resetForm();
        JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan!");
        this.film.setPanel();
    }
    
    public void updateData() throws IOException
    {
        String title = txTitle.getText();
        String year = txYear.getText();
        int idDirector = 0;
        String director = cbDirector.getSelectedItem().toString();
        String revenue = txRevenue.getText();
        String sql = "SELECT * FROM director WHERE name = '"+director+"'";
        java.sql.ResultSet res = db.selectQuery(sql);
        try {
            if(res.next())
            {
                idDirector = res.getInt("id");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(this.fileImage!= null)
        {
            uploadImage(this.fileName);
        }
        String sql2 = "UPDATE film SET poster='"+fileName+"', title='" + title + "', year='" + year + "', director='" + idDirector + "', revenue = '"+ revenue +"' WHERE id=" + selectedID ;
        int affectedRow = db.updateQuery(sql2);
        if (affectedRow > 0) {
            // Show Information
            this.film.setPanel();
            JOptionPane.showMessageDialog(null, "Data berhasil diubah!");
        } 
        else {
            JOptionPane.showMessageDialog(null, "Data gagal diubah!");
        }
        
        String sql3 = "UPDATE director SET movies = movies + 1 WHERE id='"+ idDirector +"'";
        db.updateQuery(sql3);
    }
    
    public void resetForm()
    {
        txTitle.setText("");
        txYear.setText("");
        cbDirector.setSelectedItem(null);
        txRevenue.setText("");
        txPath.setText("");
    }
    
    public void uploadImage(String img)
    {
        try
        {
            String newPath = "src/film/images/";
            File directory = new File(newPath);
            if(!directory.exists())
            {
                directory.mkdir();
            }
            
            Path copy = Paths.get(newPath + img);
            Path originalPath = Paths.get(this.filePath);
            Files.copy(originalPath, copy, StandardCopyOption.REPLACE_EXISTING);
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Failed to upload file!");
        }
    }
    
    private void cbDirectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDirectorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbDirectorActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if(isUpdate == false)
            try {
                insertData();
        } catch (IOException ex) {
            Logger.getLogger(addFilm.class.getName()).log(Level.SEVERE, null, ex);
        }
        else {
            try {
                updateData();
            } catch (IOException ex) {
                Logger.getLogger(addFilm.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.dispose();
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        try
        {
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            this.fileImage = chooser.getSelectedFile();
            this.fileName = this.fileImage.getName();
            this.filePath = this.fileImage.getAbsolutePath();
            txPath.setText(this.filePath);
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Failed to browse file!");
        }
    }//GEN-LAST:event_btnBrowseActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        if(isUpdate == false)
        {
            resetForm();
        }
        else
        {
            this.dispose();
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(addFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(addFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(addFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(addFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new addFilm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnCancel;
    private javax.swing.JComboBox<String> cbDirector;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txPath;
    private javax.swing.JTextField txRevenue;
    private javax.swing.JTextField txTitle;
    private javax.swing.JLabel txUbah;
    private javax.swing.JTextField txYear;
    // End of variables declaration//GEN-END:variables
}
